[project]
name = "aitestlab"
version = "0.1.0"
description = ""
authors = [
    {name = "ljxpython",email = "1030470148@qq.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pre-commit (>=4.2.0,<5.0.0)",
    "black (>=25.1.0,<26.0.0)",
    "isort (>=6.0.1,<7.0.0)",
    "llama-index-core (>=0.12.0,<0.13.0)",
    "llama-index-embeddings-huggingface (>=0.5.4,<0.6.0)",
    "llama-index-embeddings-instructor (>=0.3.0,<0.4.0)",
    "llama-index-embeddings-ollama (>=0.6.0,<0.7.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "pydantic-ai (>=0.2.14,<0.3.0)",
    "duckduckgo-search (>=8.0.2,<9.0.0)",
    "autogen-ext[docker] (>=0.6.0,<0.7.0)",
    "pytest-html (>=4.1.1,<5.0.0)",
    "pytest-json-report (>=1.5.0,<2.0.0)",
    "allure-pytest (>=2.14.2,<3.0.0)",
    "faker (>=37.3.0,<38.0.0)",
    "autogen-agentchat (>=0.6.0,<0.7.0)",
    "fastapi (>=0.115.12,<0.116.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "aiofiles (>=24.1.0,<25.0.0)",
    "tortoise-orm (>=0.25.1,<0.26.0)",
    "aerich (>=0.9.0,<0.10.0)",
    "passlib (>=1.7.4,<2.0.0)",
    "python-jose (>=3.5.0,<4.0.0)",
    "bcrypt (>=4.3.0,<5.0.0)",
    "pydantic[email] (>=2.11.5,<3.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
pillow = ">=11.0.0"  # 强制使用 Pillow 11+

[[tool.poetry.source]]
name = "tuna"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
priority = "primary"

[tool.aerich]
tortoise_orm = "backend.core.database.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_glob = ["migrations/*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
